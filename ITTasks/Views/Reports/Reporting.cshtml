@using ITTasks.Models.DTOS.Tasks;
@model ITTaskCreateDto
@using System.Data;
@using ChartDirector;
@using ITTasks.Statics;
@using ITTasks.Statics.Entities.Roles;

@{
	int xxx = 0;
}

@section Styles{
	<link rel="stylesheet" type="text/css" href="~/lib/datatables/datatables.min.css" />
	<link href="~/lib/pwt.datepicker/dist/css/persian-datepicker.min.css" rel="stylesheet" />
	<link href="~/lib/pwt.datepicker/dist/css/persian-datepicker.css" rel="stylesheet" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
	<link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
}


<style>
	body {
		background-color: #fbfbfb;
		overflow-x: hidden;
	}


	.sidebar .active {
		border-radius: 5px;
		box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
	}

	.sidebar-sticky {
		position: relative;
		top: 0;
		height: calc(100vh - 48px);
		padding-top: 0.5rem;
		overflow-x: hidden;
		overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
	}

	/*select,
									.select2 {
										width: auto;
										margin: 0 auto;
										border-radius: 0 !important;
										display: block;
									}

									.select2-container .select2-selection {
										height: 60px;
										overflow: scroll;
									}

									.select2-container--default .select2-selection--multiple {
										border-radius: 0;
										line-height: 30px;
										font-size: 14px;
										border: 1px solid #fafafa;
									}

									form {
										background: #f0f0f0;
										padding: 20px 0;
										width: 100%;
									}

									button {
										width: 90%;
										margin: 20px auto 0;
										line-height: 30px;
										border-radius: 0;
										background: #fab100;
										display: block;
										border: none;
										color: #ffffff;
										font-size: 14px;
									}*/
	.select2-container .select2-selection {
		height: 20px;
		overflow: auto;
	}

	.vh-20 {
		height: 20vh;
	}

	.vh-30 {
		height: 30vh;
	}

	.vh-40 {
		height: 40vh;
	}

	.vh-50 {
		height: 50vh;
	}

	.vh-80 {
		height: 80vh;
	}


	#sidebarMenu {
		width: 240px;
		z-index: 600;
		box-shadow: 0 2px 5px 0 rgb(0 0 0 / 5%), 0 2px 10px 0 rgb(0 0 0 / 5%);
		direction: rtl;
	}



	.border-radius-5 {
		border-radius: 5px;
	}

	.border-radius-10 {
		border-radius: 10px;
	}

	.border-radius-15 {
		border-radius: 15px;
	}

	.border-radius-20 {
		border-radius: 20px;
	}

	.border-radius-25 {
		border-radius: 25px;
	}

	.border-radius-30 {
		border-radius: 30px;
	}

	.margin-auto {
		margin: auto;
	}
</style>
@if (User.IsInRole(RoleTypes.Admin))
{
	@section Admn{
	<li class="nav-item">
		<a class="nav-link text-dark" title="گزارش گیری" asp-area="" asp-controller="Reports" asp-action="Reporting">گزارش گیری</a>
	</li>
	<li class="nav-item">
		<a class="nav-link text-dark" title="پنل ادمین" asp-area="" asp-controller="Admin" asp-action="Panel">پنل ادمین</a>
	</li>
}
}

<!--Main Navigation-->
<header>
	<!-- Sidebar -->
	<!-- Sidebar -->
</header>
<!--Main Navigation-->
<!--Main layout-->
<div class="container-fluid pt-4  d-flex flex-row flex-wrap">


	<div class="col-12 vh-30 d-flex justify-content-end mb-5">
		<div id="piechart_div" class="mx-2"></div>
		<div id="piechart_div_un" class="mx-2"></div>
		<div id="column_div_u" class="mx-2"></div>
		<div id="barchart_div" class="mx-2"></div>

	</div>

	<div class="col-2">
		<nav id="sidebarMenu" class="collapse d-lg-block sidebar collapse bg-white border-radius-5 vh-50">
			<div class="position-sticky">
				<div class="list-group list-group-flush mx-3 mt-3">
					<a href="/Reports/Reporting" class="list-group-item list-group-item-action py-2 ripple active my-1">
						<i class="fas fa-chart-area fa-fw me-3"></i><span>گزارش گیری</span>
					</a>

					@if (Model.Sprints.Any())
					{
						<label class="small opacity-75 my-1">اسپرینت</label>
						<select id="floatingSelect" class="js-example-basic-multiple js-example-tokenizer abc" name="states[]" multiple="multiple" style="overflow:auto"
							asp-for="SprintId" asp-items="@(new SelectList(Model.Sprints.AsEnumerable(),"Id","Title",Model.SprintId))">
						</select>
					}
					else
					{
						<label class="small opacity-75 my-1">اسپرینت</label>

					}

					<label class="small opacity-75 my-1">واحد</label>
					<select id="floatingSelectUnit" class="js-example-basic-multiple js-example-tokenizer abc" name="states[]" multiple="multiple" style="overflow:auto"
							asp-for="UnitId" asp-items="@(new SelectList(UnitsTypes.keyValues.AsEnumerable(),"Key","Value",Model.UnitId))">
					</select>

					@if (Model.Users.Any())
					{
						<label class="small opacity-75 my-1">کاربر</label>
						<select id="floatingSelectuser" class="js-example-basic-multiple js-example-tokenizer abc" name="states[]" multiple="multiple" style="overflow:auto"
							asp-for="UserId" asp-items="@(new SelectList(Model.Users.AsEnumerable(),"Id","FullName",Model.UserId))">
						</select>
					}
					else
					{
						<label class="small opacity-75 my-1">اسپرینت</label>

					}

					@if (Model.Users.Any())
					{
						<label class="small opacity-75 my-1">نوع تسک</label>
						<select id="floatingSelectTaskType" class="js-example-basic-multiple js-example-tokenizer abc" name="states[]" multiple="multiple" style="overflow:auto"
							asp-for="TaskTypeId" asp-items="@(new SelectList(Model.ITTaskTypes.AsEnumerable(),"Id","Title",Model.TaskTypeId))">
						</select>
					}
					else
					{
						<label class="small opacity-75 my-1">اسپرینت</label>

					}
					<div class="mb-3">
						<label asp-for="FromDate" class="small opacity-75 my-1">از تاریخ</label>
						<input id="fDate" dir="auto" class="form-control abc" placeholder="@Html.DisplayNameFor(model => model.FromDate)" autocomplete="off">
						<input asp-for="FromDate" class="abc" hidden>
					</div>
					<div class="mb-3">
						<label asp-for="ToDate" class="small opacity-75 my-1">تا تاریخ</label>
						<input id="tDate" dir="auto" class="form-control abc" placeholder="@Html.DisplayNameFor(model => model.ToDate)" autocomplete="off">
						<input asp-for="ToDate" class="abc" hidden>
					</div>
					<a href="#" class="list-group-item list-group-item-action py-2 ripple">
						<button id="excel-btn" class="btn btn-warning">
							خروجی اکسل
						</button>
					</a>

				</div>
			</div>
		</nav>
	</div>
	<div class="col-10 ">
		<div id="report-content" class="col-12 border-radius-5">
		</div>
		<div id="report-content1" class="col-12 vh-30 d-flex">
			
		</div>
	</div>

</div>

@section Scripts {

	<script type="text/javascript" src="~/lib/datatables/datatables.min.js"></script>
	<script type="text/javascript" src="~/js/datatable.js"></script>
	<script src="~/lib/pwt.datepicker/dist/js/persian-date.min.js"></script>
	<script src="~/lib/pwt.datepicker/dist/js/persian-datepicker.min.js"></script>
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script src="~/lib/select2/dist/js/select2.min.js"></script>

	<script type="text/javascript">
		$(document).ready(function () {

			var pd = $("#fDate").persianDatepicker({
				observer: false,
				format: 'YYYY/MM/DD',
				altField: '#FromDate',
				altFormat: 'X',
				toolbox: {
					calendarSwitch: {
						enabled: false
					}
				},
				onSelect: function (e) {
					search();
				}
			});

			pd.setDate('@Model.FromDate');

			var sdt = $("#tDate").persianDatepicker({
				observer: false,
				format: 'YYYY/MM/DD',
				altField: '#ToDate',
				altFormat: 'X',
				toolbox: {
					calendarSwitch: {
						enabled: false
					}
				},
				onSelect: function (e) {
					search();
				}
			});

			sdt.setDate('@Model.ToDate');

		});

		$(".abc").on("change", function () {
			search();
			ChartF();
		})

		$("#excel-btn").on("click", function () {
			let mydata = {
				sprintIds: $("#floatingSelect").val(),
				userIds: $("#floatingSelectuser").val(),
				taskTypeIds: $("#floatingSelectTaskType").val(),
				unitIds: $("#floatingSelectUnit").val(),
				fromDate: $("#FromDate").val(),
				toDate: $("#ToDate").val(),
			}

			let json = JSON.stringify(mydata);

			$.ajax({
				type: "POST",
				url: "/Repots/GetTasksExcelUrl",
				data: json,
				contentType: 'application/json; charset=utf-8',
				success: function (data) {
					window.open(data)
				},
				error: function (err) {
					alert("error");
				}
			});
		})



		function search() {
			let mydata = {
				sprintIds: $("#floatingSelect").val(),
				UserIds: $("#floatingSelectuser").val(),
				taskTypeIds: $("#floatingSelectTaskType").val(),
				unitIds: $("#floatingSelectUnit").val(),
				fromDate: $("#FromDate").val(),
				toDate: $("#ToDate").val(),
			}

			let json = JSON.stringify(mydata);

			$.ajax({
				type: "POST",
				url: "/Reports/Reports_Partial",
				data: json,
				contentType: 'application/json; charset=utf-8',
				success: function (data) {
					//console.log(data);
					$("#report-content").html(data);
				},
				error: function (err) {
					alert(err);
					console.log(err)
				}
			});

		}


		//$("document").ready(function () {
		//	$('#tab').DataTable();
		//});

		function arrayToList(array) {
			let list = null;
			for (let i = array.length - 1; i >= 0; i--) {
				list = { value: array[i], rest: list };
			}
			return list;
		}



		function ChartF(){
			
		}

		$(document).ready(function () {
			$('.js-example-basic-multiple').select2();

			$(".js-example-tokenizer").select2({
				tags: true,
				tokenSeparators: [',', ' ']
			})
			if ('@(Model.Sprints != null && Model.Sprints.Count != 0)' == 'True') {
				$("#floatingSelect").val('@Model.Sprints?.LastOrDefault()?.Id').change();
			}

			///////////////

			





			/////////////

			$.ajax({
				type: 'GET',
				dataType: "json",
				contentType: "application/json",
				url: '/sprint/GetAllSprints',
				success: function (result) {
					console.log(result);
					google.charts.load('current', {
						'packages': ['corechart']
					});
					google.charts.setOnLoadCallback(function () {
						drawChart(result);
						drawChart_u(result);
						drawChart_t(result);
						drawChart_un(result);
					});
				}
			});

			function drawChart(result) {
				//console.log(result);
				var data = new google.visualization.DataTable();
				data.addColumn('string', 'SprintTitle');
				data.addColumn('number', 'دقیقه');
				var dataArray = [];
				$.each(result.sprintsReport, function (i, obj) {
					dataArray.push([obj.sprintTitle, obj.sumOfTimeOfTasks]);
				});

				data.addRows(dataArray);

				var piechart_options = {
					title: 'چارت جمع ساعت های هر اسپرینت به صورت درصد',
					width: 400,
					height: 300
				};
				var piechart = new google.visualization.PieChart(document
					.getElementById('piechart_div'));
				piechart.draw(data, piechart_options);

				var barchart_options = {
					title: 'چارت جمع ساعت های هر اسپرینت',
					width: 400,
					height: 300,
					legend: 'none'
				};
				var barchart = new google.visualization.ColumnChart(document
					.getElementById('barchart_div'));
				barchart.draw(data, barchart_options);
			}

			function drawChart_un(result) {
				console.log(result);
				var data = new google.visualization.DataTable();
				data.addColumn('string', 'UnitName');
				data.addColumn('number', 'دقیقه');
				var dataArray = [];
				$.each(result.unitsReport, function (i, obj) {
					dataArray.push([obj.unitName, obj.sumOfTimeOfTasks]);
				});

				data.addRows(dataArray);

				var piechart_options = {
					title: 'چارت جمع ساعت های هر واحد در تمامی اسپرینت ها',
					width: 400,
					height: 300
				};
				var piechart = new google.visualization.PieChart(document
					.getElementById('piechart_div_un'));
				piechart.draw(data, piechart_options);
			}

			function drawChart_t(result) {
				console.log(result);
				var data = new google.visualization.DataTable();
				data.addColumn('string', 'TaskTypeTitle');
				data.addColumn('number', 'دقیقه');
				var dataArray = [];
				$.each(result.taskTypesReport, function (i, obj) {
					//console.log(obj)
					dataArray.push([obj.taskTypeTitle, obj.sumOfTimeOfTasks]);
				});

				data.addRows(dataArray);

				var piechart_options = {
					title: 'چارت درصد تسک ها با توجه به نوع تسک ',
					width: 400,
					height: 300
				};
				var piechart = new google.visualization.PieChart(document
					.getElementById('piechart_div'));
				piechart.draw(data, piechart_options);
			}

			function drawChart_u(result) {
				console.log(result);
				var data = new google.visualization.DataTable();
				data.addColumn('string', 'UserName');
				data.addColumn('number', 'دقیقه');
				var dataArray = [];
				$.each(result.usersReport, function (i, obj) {
					//console.log(obj)
					dataArray.push([obj.userName, obj.sumOfTimeOfTasks]);
				});

				data.addRows(dataArray);

				var culomnchart_options = {
					title: 'چارت جمع ساعت های هر کاربر در کل اسپرینت ها',
					width: 400,
					height: 300,
					legend: 'none'
				};
				var columnChart = new google.visualization.ColumnChart(document
					.getElementById('column_div_u'));
				columnChart.draw(data, culomnchart_options);
			}

		});

	</script>
}
