@using ITTasks.Infrastructure.Helper;
@using ITTasks.Models.DTOS.Tasks;
@using ITTasks.Statics;
@using ITTasks.Statics.Entities.Roles;
@model List<ITTaskDto>


@section Styles{
	<link href="~/lib/pwt.datepicker/dist/css/persian-datepicker.min.css" rel="stylesheet" />
	<link href="~/lib/pwt.datepicker/dist/css/persian-datepicker.css" rel="stylesheet" />
	<link rel="stylesheet" href="~/lib/data-tables/datatables.min.css" asp-append-version="true" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
	<link rel="stylesheet" type="text/css" href="~/lib/datatables/datatables.min.css" />
}

<style>
	td {
		width: 30ch;
		max-width: 30ch;
		word-wrap: break-word;
	}

	.overflow-dotted {
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
	}

	.modal {
		position: fixed; /* Stay in place */
		z-index: 1; /* Sit on top */
		left: 0;
		top: 0;
		width: 100%; /* Full width */ /* Full height */
		overflow: auto; /* Enable scroll if needed */
		background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
	}

	/* Modal Content/Box */
	.modal-content-custom {
		background-color: #fefefe;
		margin: 4.7% auto; /* 10% from the top and centered */
		padding: 20px;
		border: 1px solid #888;
		width: 50%; /* Could be more or less, depending on screen size */
		border-radius: 0.5rem;
	}

	/* Close Button */
	.close {
		color: #aaa;
		float: right;
		font-size: 28px;
		font-weight: bold;
	}

		.close:hover,
		.close:focus {
			color: black;
			text-decoration: none;
			cursor: pointer;
		}

	div.dataTables_wrapper div.dataTables_filter input {
		margin-left: 0.5em;
		display: inline-block;
		width: 400px;
	}

	div.dataTables_wrapper div.dataTables_filter {
		text-align: left;
	}
</style>

@if (User.IsInRole(RoleTypes.Admin))
{
	@section Admn{
	<li class="nav-item">
		<a class="nav-link text-dark" title="گزارش گیری" asp-area="" asp-controller="Reports" asp-action="Reporting">گزارش گیری</a>
	</li>
	<li class="nav-item">
		<a class="nav-link text-dark" title="پنل ادمین" asp-area="" asp-controller="Admin" asp-action="Panel">پنل ادمین</a>
	</li>
}
}


<div id="modal" class="modal">
	<div class="modal-content-custom">
		<span title="بستن" class="close">&times;</span>
		<br />
		<div id="edit-modal-content"></div>
	</div>
</div>


<div class="row">
	<div class="col-2" style="margin-right:50px">
	</div>
	<div class="col-8">
		<div class="container mt-3 d-flex justify-content-center flex-wrap">
			@if (Model.Count == 0)
			{
				<h2>موردی برای نمایش وجود ندارد</h2>
			}

			@if (Model.Count != 0)
			{
				<table class="table data-table table-hover text-nowrap display col-12">
					<thead>
						<tr>
							<th>شماره</th>
							<th>نام کاربر </th>
							<th>مدت</th>
							<th>تاریخ </th>
							<th>واحد </th>
							<th>اسپرینت</th>
							<th>نوع تسک</th>
							<th>توضیحات</th>
						</tr>
					</thead>
					<tbody>
						@{
							var index = ((Model.FirstOrDefault().PageInfo.CurrentPage - 1) * Model.FirstOrDefault().PageInfo.ItemsPerPage) + 1;
						}
						@foreach (var task in Model)
						{
							<tr>
								<td>
									@(
										index++
										)
								</td>
								<td>@task.User.FullName</td>
								<td>@task.StandardDuration</td>
								<td>@task.PersianDate</td>
								<td>@task.UnitName</td>
								<td>@task.Sprint.Title</td>
								<td>@task.TaskType.Title</td>
								<td class="overflow-dotted" title="@task.Description">@task.Description</td>
								@*<td><button data-task-id="@task.Id" class="btn btn-danger btn-delete-task" title="حذف"><i class="fa" aria-hidden="true">&#xf014;</i></button></td>
								<td>
									<button data-edit-task-id="@task.Id" class="btn btn-info btn-edit" title="ویرایش">
										<i class='fa fa-edit' style="color:white"></i>
									</button>
								</td>*@
							</tr>
						}

					</tbody>
				</table>

				
				<div class="col-3 justify-content-end">
					<a href="/tasks/ExcelAllTask"><button class="btn btn-warning">اکسل تمام تسک ها</button></a>
				</div>
			}
		</div>


		@section Scripts {
			<script type="text/javascript" src="~/lib/datatables/datatables.min.js"></script>
			<script type="text/javascript" src="~/js/datatable.js"></script>
			<script src="~/lib/pwt.datepicker/dist/js/persian-date.min.js"></script>
			<script src="~/lib/pwt.datepicker/dist/js/persian-datepicker.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
			<script type="text/javascript" src="~/lib/data-tables/datatables.min.js"></script>
			<script type="text/javascript" src="~/assets/js/datatable.js"></script>
			@{
				await Html.RenderPartialAsync("_ValidationScriptsPartial");
			}

			<script type="text/javascript">


				$(".btn-edit").on("click", function () {

					taskToEditId = $(this).data("edit-task-id")

					$.ajax({
						url: "/Tasks/UpdateTask?id=" + taskToEditId,
					}).done(function (result) {
						openModal("modal");
						$("#modal #edit-modal-content").html(result);
					});

				}
				);

				$(".close").on("click", function () {
					$("#modal").hide();
				});

				function openModal(modalId) {
					$("#" + modalId).show();
				}

				$('#Date').keyup(function () {
					var new_stuff = $(this).val();
					new_stuff = new_stuff.replace(/[\n\r]+/g, ""); // clean out newlines, so we dont get dups!
					var test = new_stuff.replace(/(.{10})/g, "$1\n"); // Here
					$(this).val(test);
				});

				var taskToDeleteId = "";

				$(document).ready(function () {

					if ('@Model' == true) {
						ShowAlert("آفرین", "کاربر با موفقیت اضافه شد", "success")
					}


					$(".btn-delete-task").on("click",
						function () {
							taskToDeleteId = $(this).data("task-id");
							DeleteSwalAlert()
						});

					$("#btn-delete-task").on("click", function () {

						deleteTask();

					});

				});


				function deleteTask() {


					fetch("/Tasks/DeleteTask/" + taskToDeleteId, {
						method: "POST", // or 'PUT'
						headers: {
							"Content-Type": "application/json",
						},
					}).then((res) => res.json()).then((res) => {
						console.log(res, 'res')
						if (res.errorCode == 1) {
							setTimeout(function () {
								location.replace("@Urls.BaseUrl")
							}, 2000)

							DeleteAlert()

						} else {
							//ShowAlert('خطا', 'حذف این ایتم باخطا مواجه شد،لطفا بار دیگر تلاش کنید', 'error')
							Swal.fire({
								position: 'top',
								icon: 'error',
								title: 'خطا',
								text: 'حذف ایتم باخطا مواجه شد،لطفا بار دیگر تلاش کنید',
								showConfirmButton: false,
								timer: 1700
							})
						}
					})
				}

				function ShowAlert(title, message, type) {
					Swal.fire({
						icon: type,
						title: title,
						text: message
					})
				}

				function DeleteSwalAlert() {
					Swal.fire({
						title: 'اخطار',
						text: "ایا می خواهید این ایتم را حذف کنید؟",
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'بله ،مطمئنم',
						cancelButtonText: 'خیر'
					}).then((result) => {
						if (result.isConfirmed) {

							deleteTask()
							DeleteAlert()
						}
					})

				}

				function DeleteAlert() {
					setTimeout(Swal.fire({
						position: 'top',
						icon: 'success',
						text: 'با موفقیت انجام شد',
						showConfirmButton: false,
						timer: 1700
					}), 2000)
				}

				function SubmitAlert(errorCode, errorMessage) {
					if (errorCode == 0) {
						Swal.fire({
							position: 'top',
							icon: 'success',
							text: 'با موفقیت انجام شد',
							showConfirmButton: false,
							timer: 1700
						})
					}
					else {
						Swal.fire({
							position: 'top',
							icon: 'error',
							title: 'خطا',
							text: errorMessage,
							showConfirmButton: false,
							timer: 1700
						})
					}
				}

			</script>
		}
