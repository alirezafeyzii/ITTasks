@using ITTasks.Models.DTOS.Tasks;
@using ITTasks.Statics;
@model ITTaskDto

@{
	Layout = "_Layout";
}

@section Styles{
	<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
}


<style>
	.modal {
		position: fixed; /* Stay in place */
		z-index: 1; /* Sit on top */
		left: 0;
		top: 0;
		width: 100%; /* Full width */ /* Full height */
		overflow: auto; /* Enable scroll if needed */
		background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */
	}

	/* Modal Content/Box */
	.modal-content-custom {
		background-color: #fefefe;
		margin: 4.7% auto; /* 10% from the top and centered */
		padding: 20px;
		border: 1px solid #888;
		width: 50%; /* Could be more or less, depending on screen size */
		border-radius: 0.5rem;
	}

	/* Close Button */
	.close {
		color: #aaa;
		float: right;
		font-size: 28px;
		font-weight: bold;
	}

		.close:hover,
		.close:focus {
			color: black;
			text-decoration: none;
			cursor: pointer;
		}
</style>

<div id="modal" class="modal">
	<div class="modal-content-custom">
		<span title="بستن" class="close">&times;</span>
		<br />
		<div id="edit-modal-content"></div>
	</div>
</div>

<div class="row">
	<div class="col-2" style="margin-right:50px">
	</div>
	<div class="col-8">
		<div class="container mt-3 d-flex justify-content-center flex-wrap">


			<table class="table data-table table-hover text-nowrap display col-12">
				<thead>
					<tr>
						<th>نام کاربر </th>
						<th>مقدار ساعت</th>
						<th>تاریخ </th>
						<th>واحد </th>
						<th>اسپرینت</th>
						<th>نوع تسک</th>
						<th>توضیحات</th>
						<th>حذف</th>
						<th>ویرایش</th>
					</tr>
				</thead>
				<tbody>

					<tr>
						<td>@Model.User.FullName</td>
						<td>@Model.StandardDuration</td>
						<td>@Model.PersianDate</td>
						<td>@Model.UnitName</td>
						<td>@Model.Sprint.Title</td>
						<td>@Model.TaskType.Title</td>
						<td class="overflow-dotted" title="@Model.Description">@Model.Description</td>
						<td><button data-task-id="@Model.Id" class="btn btn-danger btn-delete-task" title="حذف"><i class="fa" aria-hidden="true">&#xf014;</i></button></td>
						@*<td><a href="/Tasks/UpdateTask?id=@Model.Id"><button class="btn btn-info">ویرایش</button></a></td>*@
						<td>
							<button data-edit-task-id="@Model.Id" class="btn btn-info btn-edit" title="ویرایش">
								<i class='fa fa-edit' style="color:white"></i>
							</button>
						</td>
					</tr>
				</tbody>
			</table>
		</div>



		@section Scripts {

			<script src="~/lib/pwt.datepicker/dist/js/persian-date.min.js"></script>
			<script src="~/lib/pwt.datepicker/dist/js/persian-datepicker.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
			<script src="sweetalert2.min.js"></script>
			<link rel="stylesheet" href="sweetalert2.min.css">
				@*<script type="text/javascript" src="~/lib/data-tables/datatables.min.js"></script>
		<script type="text/javascript" src="~/assets/js/datatable.js"></script>*@
				@{
					await Html.RenderPartialAsync("_ValidationScriptsPartial");
				}

			<script type="text/javascript">



				var taskToDeleteId = "";

				$(document).ready(function () {


					$(".btn-delete-task").on("click",
						function () {
							taskToDeleteId = $(this).data("task-id");
							DeleteSwalAlert()
						});

					$("#btn-delete-task").on("click", function () {

						deleteTask();

					});

				});


				function deleteTask() {


					fetch("/Tasks/DeleteTask/" + taskToDeleteId, {
						method: "POST", // or 'PUT'
						headers: {
							"Content-Type": "application/json",
						},
					}).then((res) => res.json()).then((res) => {
						console.log(res, 'res')
						if (res.errorCode == 1) {
							setTimeout(function () {
								location.replace('@Urls.BaseUrl')
							}, 2000)

							DeleteAlert()

						} else {
							//ShowAlert('خطا', 'حذف این ایتم باخطا مواجه شد،لطفا بار دیگر تلاش کنید', 'error')
							Swal.fire({
								position: 'top',
								icon: 'error',
								title: 'خطا',
								text: 'حذف ایتم باخطا مواجه شد،لطفا بار دیگر تلاش کنید',
								showConfirmButton: false,
								timer: 1700
							})
						}
					})
				}


				function ShowAlert(title, message, type) {
					Swal.fire({
						icon: type,
						title: title,
						text: message
					})
				}

				function DeleteSwalAlert() {
					Swal.fire({
						title: 'اخطار',
						text: "ایا می خواهید این ایتم را حذف کنید؟",
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'بله ،مطمئنم',
						cancelButtonText: 'خیر'
					}).then((result) => {
						if (result.isConfirmed) {

							deleteTask()
							DeleteAlert()
						}
					})

				}

				function DeleteAlert() {
					setTimeout(Swal.fire({
						position: 'top',
						icon: 'success',
						text: 'با موفقیت انجام شد',
						showConfirmButton: false,
						timer: 1700
					}), 2000)
				}

				$(".btn-edit").on("click", function () {

					taskToEditId = $(this).data("edit-task-id")

					$.ajax({
						url: "/Tasks/UpdateTask?id=" + taskToEditId,
					}).done(function (result) {
						openModal("modal");
						$("#modal #edit-modal-content").html(result);
					});

				}
				);

				$(".close").on("click", function () {
					$("#modal").hide();
				});

				function openModal(modalId) {
					$("#" + modalId).show();
				}

			</script>
		}
